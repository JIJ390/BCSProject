<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.bcs.myPage.mapper.MyPageMapper">
  	
  	<!-- [TIP]
  	  parameterType 속성은 필수가 아니다!!!
  	  Mybatis TypeHandler가 파라미터의 타입을 알아서 판별할 수 있다.
  	  --> 
  	 
  	
  	<select id="login">
  			SELECT
  				MEMBER_NO,
  				MEMBER_NAME,
  				MEMBER_EMAIL,
  				MEMBER_PW,
  				MEMBER_DEL_FL,
  				MEMBER_DATE,
  				MEMBER_ADDRESS,
  				MEMBER_FL,
  				MEMBER_POINT,
  				MEMBER_TEL,
  				MEMBER_ID
  			FROM "MEMBER"
  			WHERE MEMBER_ID = #{memberId}
  			AND   MEMBER_DEL_FL = 'N'
  	</select>
  	
  	<select id="findId">
  		SELECT
  			MEMBER_ID
  		FROM
  			"MEMBER"
  		WHERE
  			MEMBER_EMAIL = #{memberEmail}
  	</select>
  	
  	<!-- 일치하는 아이디가 1개인지 0개인지 -->
  	<select id="findIdReal">
  		SELECT COUNT(*)
  		FROM
  			"MEMBER"
  		WHERE
  			MEMBER_EMAIL = #{email}
  		AND
  			MEMBER_NAME = #{name}
  	
  	</select>
  	
  	<!-- 비번찾기 -->
  	  	<select id="findPw">
  		SELECT MEMBER_EMAIL
  		FROM
  			"MEMBER"
  		WHERE
  			MEMBER_ID = #{id}
  		AND
  			MEMBER_NAME = #{name}
  	
  	</select>
  	
  	<!-- 비번찾기 이메일 불러오기 -->
  	<select id="checkAuthKey2">
  		SELECT MEMBER_EMAIL
  		FROM
  			"MEMBER"
  		WHERE
  			MEMBER_ID = #{id}
  	
  	
  	</select>
  	
  	<!-- 임시비번찾기 이멜 불러오기 -->
  	<!--  -->
  	<select id="sendAuthKey3">
  	  		SELECT MEMBER_EMAIL
  		FROM
  			"MEMBER"
  		WHERE
  			MEMBER_ID = #{id}
  	</select>
  	
  	<!-- 이메일을 통한 회원넘버 조회 -->
  		<select id="findMemberNoByEmail">
		SELECT MEMBER_NO
		FROM "MEMBER"
		WHERE MEMBER_EMAIL = #{email}
		AND MEMBER_DEL_FL = 'N'
	</select>

	<!-- 임시비밀번호로 세팅 -->	
		<update id="updatePassword">
		UPDATE "MEMBER"
		SET MEMBER_PW = #{encPw} 
		WHERE MEMBER_NO = #{memberNo}
		AND MEMBER_DEL_FL = 'N'
	</update>

	<!-- 회원 탈퇴 -->
		<update id="withdrawal">
		UPDATE "MEMBER"
		SET MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO = #{memberNo}
		</update>
		
	<!-- 비밀번호 변경 -->
		<update id="passwordChange">
			UPDATE "MEMBER"
			SET MEMBER_PW = #{encPw}
			WHERE MEMBER_NO = #{memberNo}
			AND MEMBER_DEL_FL = 'N'
		</update>	
		
	<!-- 주소 변경 -->
		<update id="addressChange">
			UPDATE "MEMBER"
			SET MEMBER_ADDRESS = #{address}
			WHERE MEMBER_NO = #{memberNo}
			AND MEMBER_DEL_FL = 'N'
		</update>	
		
	<!-- 주소 변경 -->
		<update id="numberChange">
			UPDATE "MEMBER"
			SET MEMBER_TEL = #{number}
			WHERE MEMBER_NO = #{memberNo}
			AND MEMBER_DEL_FL = 'N'
		</update>	
		
		<!-- 게시물 수 -->
		<select id="selectSellingListCount" resultType="_int">
			SELECT
				COUNT(*)
			FROM
				"SELLING_DEVICE"
			WHERE MEMBER_NO = #{memberNo}
		</select>
		
		<!-- 게시물 수 -->
		<select id="selectPointListCount" resultType="_int">
			SELECT
				COUNT(*)
			FROM
				"POINT_LOG"
			WHERE MEMBER_NO = #{memberNo}
		</select>
		
		<!-- 게시물 수 -->
		<select id="selectBuyingListCount" resultType="_int">
			SELECT
				COUNT(*)
			FROM
				"ORDER"
			WHERE MEMBER_NO = #{memberNo}
		</select>
		
		<!-- 판매내역 -->
		<select id="selectSellingList" resultType="SellingDevice">
		SELECT
	    (SELECT 
	        DEVICE_NAME
	     FROM "DEVICE"
	     WHERE DEVICE_NO = S.DEVICE_NO) AS "DEVICE_NAME",
	    SELLING_DEVICE_DATE,
	    CLIENT_BANK,
	    ACCOUNT_NO,
	    REQUEST_COMMENT,
	    (SELECT
	         CAPACITY_TYPE
	     FROM CAPACITY
	     WHERE CAPACITY_NUMBER = S.CAPACITY_NUMBER) AS "CAPACITY_TYPE",
	    (SELECT
	         GRADE_TYPE
	     FROM "GRADE"
	     WHERE GRADE_NUMBER = S.GRADE_NUMBER) AS "GRADE_TYPE",
	    (SELECT
	         COLOR_NAME
	     FROM COLOR
	     WHERE COLOR_NO = S.COLOR_NO) AS "COLOR_NAME",
	    MEMBER_NO,
	    CLIENT_NAME,
	    REGEXP_REPLACE(CLIENT_TEL, '(.{3})(.+)(.{4})', '\1-\2-\3') AS "CLIENT_TEL",
	    (SELECT
	         MEMBER_NAME
	     FROM "MEMBER"
	     WHERE MEMBER_NO = S.MEMBER_NO) AS "MEMBER_NAME",
	    -- SELLING_DEVICE_STATUS 테이블에서 상태 정보 조인
	    (SELECT 
	         SELLING_DEVICE_STATUS_CONTENT
	     FROM SELLING_DEVICE_STATUS
	     WHERE SELLING_DEVICE_STATUS_CODE = S.STATUS_CODE) AS "STATUS_CONTENT"
		FROM SELLING_DEVICE S
		WHERE
		    MEMBER_NO = #{memberNo}
		ORDER BY S.SELLING_DEVICE_DATE DESC
		</select>
		
		<!-- 포인트 내역 -->
		<select id="selectPointList" resultType="Point">
		SELECT *
		FROM POINT_LOG
		WHERE MEMBER_NO = #{memberNo}
		ORDER BY POINT_LOG_DATE DESC
		</select>
		
		<!-- 구매내역 -->
		<select id="selectBuyingList" resultType="Order">
		SELECT
			ORDER_NAME,
			REGEXP_REPLACE(ORDER_TEL, '(.{3})(.+)(.{4})', '\1-\2-\3') "ORDER_TEL",
			ORDER_COMMENT,
			ORDER_ADDRESS,
			MEMBER_NO,
			OS.ORDER_STATUS_CONTENT,
			ORDER_DATE,
			O.BUYING_DEVICE_NO AS "BUYING_DEVICE_NO",
			D.DEVICE_NAME AS "DEVICE_NAME",
			C.COLOR_NAME AS "COLOR_NAME",
			CP.CAPACITY_TYPE AS "CAPACITY_TYPE",
			G.GRADE_TYPE AS "GRADE_TYPE"
		FROM "ORDER" O
		LEFT JOIN BUYING_DEVICE BD ON (O.BUYING_DEVICE_NO = BD.BUYING_DEVICE_NO)
		LEFT JOIN DEVICE D ON (BD.DEVICE_NO = D.DEVICE_NO)
		LEFT JOIN COLOR C ON (BD.COLOR_NO = C.COLOR_NO)
		LEFT JOIN CAPACITY CP ON (BD.CAPACITY_NUMBER = CP.CAPACITY_NUMBER)
		LEFT JOIN GRADE G ON (BD.GRADE_NUMBER = G.GRADE_NUMBER)
		LEFT JOIN ORDER_STATUS OS ON (OS.ORDER_STATUS_CODE = O.ORDER_STATUS_CODE)
		WHERE MEMBER_NO = #{memberNo}
		ORDER BY ORDER_DATE DESC
		</select>
		
		

  	
</mapper>
