<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.bcs.admin.mapper.AdminMapper">

	<select id="memberNoCount">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_NO = #{searchText}
	</select>
	
	<select id="memberNameCount">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_NAME LIKE '%' || #{searchText} || '%'
	</select>
	
	<select id="memberEmailCount">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_EMAIL LIKE '%' || #{searchText} || '%'
	</select>
	
	<select id="memberTelCount">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_TEL LIKE '%' || #{searchText} || '%'
	</select>
	
	<select id="allCount">
		SELECT COUNT(*)
		FROM MEMBER
	</select>
	
	<select id="geteventListCount">
		SELECT COUNT(*)
		FROM EVENT
	</select>
	
	
	
	<select id="searchMemberList">
SELECT *
FROM
(
	SELECT ROWNUM "RN", A.*
	FROM
		(SELECT E.*
		FROM "MEMBER" E
		WHERE 
		<choose>
			<when test="searchType == '회원번호'">MEMBER_NO</when>
			<when test="searchType == '이름'">MEMBER_NAME</when>
			<when test="searchType == '이메일'">MEMBER_EMAIL</when>
			<when test="searchType == '전화번호'">MEMBER_TEL</when>
		</choose>
		<choose>
			<when test="searchType == '회원번호' and searchText.isEmpty">
				LIKE '%' || #{searchText} || '%'ORDER BY
			</when>
			<when test="searchType == '회원번호' and searchText != ''">
				= #{searchText} ORDER BY
			</when>
			<when test="searchType == '이름'">
				LIKE '%' || #{searchText} || '%'ORDER BY 
			</when>
			<when test="searchType == '이메일'">
				LIKE '%' || #{searchText} || '%'ORDER BY 
			</when>
			<when test="searchType == '전화번호'">	
				LIKE '%' || #{searchText} || '%'ORDER BY 
			</when>
		</choose>
 
		<choose>
			<when test="searchAsc == '회원번호'">MEMBER_NO</when>
			<when test="searchAsc == '이름'">MEMBER_NAME</when>
			<when test="searchAsc == '이메일'">MEMBER_EMAIL</when>
			<when test="searchAsc == '전화번호'">MEMBER_TEL</when>
		</choose>	
		<choose>
			<when test="ud == 1">DESC</when>
			<when test="ud == 2">ASC</when>
		</choose>
		) A)
WHERE RN BETWEEN 1 + ((#{cp}-1)*10) AND 10 + ((#{cp}-1)*10)


	</select>
	
	
	<select id="adminMemberFl">
		SELECT MEMBER_DEL_FL
		FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
	</select>
	<select id="adminMemberAdFl">
		SELECT MEMBER_FL
		FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
	</select>
	<select id="adminMemberBuy">
		SELECT COUNT(*)
		FROM "ORDER"
		WHERE MEMBER_NO = #{memberNo}
	</select>
	<select id="adminMemberSell">
		SELECT COUNT(*)
		FROM "SELLING_DEVICE"
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<update id="memberDelFlChange">
UPDATE "MEMBER"
SET MEMBER_DEL_FL = CASE WHEN MEMBER_DEL_FL = 'Y' THEN 'N' ELSE 'Y' END
WHERE MEMBER_NO = #{memberNo}
	</update>
	<update id="memberFlChange">
UPDATE "MEMBER"
SET MEMBER_FL = CASE WHEN MEMBER_FL = '1' THEN '2' ELSE '1' END
WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<select id="adminChatCheck">
SELECT E.*, (SELECT MEMBER_NAME FROM "MEMBER" WHERE MEMBER_NO = E.MEMBER_NO) "MEMBER_NAME",
(
	SELECT CHATTING_MESSAGE_CONTENT
	FROM 
		(
			SELECT CHATTING_MESSAGE_CONTENT
			FROM CHATTING_MESSAGE
			WHERE CHATTING_ROOM_NO = E.CHATTING_ROOM_NO
			ORDER BY CHATTING_MESSAGE_NO DESC
		) "E"
	WHERE ROWNUM = 1
) "LAST_MESSAGE",
(
	SELECT COUNT(*) 
	FROM CHATTING_MESSAGE 
	WHERE RECEIVER_NO = #{memberNo}
	AND CHATTING_MESSAGE_READ_FL = 'N' 
	AND CHATTING_ROOM_NO = E.CHATTING_ROOM_NO
) "NO_READ_COUNT"
FROM CHATTING_ROOM "E"
WHERE MEMBER_NO = #{memberNo} OR ADMIN_NO = #{memberNo}
ORDER BY NO_READ_COUNT DESC
	</select>
	
	<select id="adminChattingList">
		SELECT E.*, (SELECT MEMBER_NAME FROM "MEMBER" WHERE MEMBER_NO = E.SENDER_NO) "SENDER_NAME"
		FROM CHATTING_MESSAGE "E"
		WHERE CHATTING_ROOM_NO = #{chattingRoomNo}
		ORDER BY CHATTING_MESSAGE_NO ASC
	</select>
	
	<select id="firstArCheck">
		SELECT COUNT(*)
		FROM CHATTING_MESSAGE
		WHERE RECEIVER_NO = #{memberNo}
		AND CHATTING_MESSAGE_READ_FL = 'N'
	</select>
	

	
	<select id="deviceColorList">
SELECT D.DEVICE_NO, DEVICE_RELEASE_DATE,DEVICE_NAME,DEVICE_IMG,
   NVL((SELECT COUNT(*)
    FROM "ORDER"
    JOIN BUYING_DEVICE USING (BUYING_DEVICE_NO)
    WHERE D.DEVICE_NO = BUYING_DEVICE.DEVICE_NO
    GROUP BY DEVICE_NO), 0) AS "ORDER_COUNT",
   NVL((SELECT COUNT(*)
    FROM "BUYING_DEVICE"
    WHERE D.DEVICE_NO = BUYING_DEVICE.DEVICE_NO
    AND SOLD_FL = 'N'
    GROUP BY DEVICE_NO), 0) AS "DEVICE_COUNT"
FROM DEVICE D
ORDER BY 
	DEVICE_RELEASE_DATE DESC

	</select>
	<update id="chatRead">
UPDATE CHATTING_MESSAGE
SET CHATTING_MESSAGE_READ_FL = 'Y'
WHERE RECEIVER_NO = #{memberNo}
AND CHATTING_ROOM_NO = #{chattingRoomNo}
	</update>
	
	
	<select id="getLoginMember">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_NO = #{memberNo} 
	</select>
	
	<select id="chatroom">
		SELECT *
		FROM CHATTING_ROOM
		WHERE CHATTING_ROOM_NO = #{chattingRoomNo}

	</select>
	
	<insert id="createChatRoom">
		INSERT INTO CHATTING_ROOM
		VALUES (SEQ_CHATTING_ROOM_NO.NEXTVAL, DEFAULT, 13, #{memberNo})
	</insert>
	
	<select id="selectRoomNo">
		SELECT CHATTING_ROOM_NO
		FROM CHATTING_ROOM
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<select id="galaxyA">
		SELECT *
		FROM 
			(SELECT *
			FROM DEVICE
			WHERE DEVICE_NAME LIKE '%Galaxy%'
			OR DEVICE_NAME LIKE '%galaxy%')
		WHERE DEVICE_NAME LIKE '% A%'
		ORDER BY DEVICE_RELEASE_DATE DESC
	</select>
	<select id="galaxyS">
		SELECT *
		FROM 
			(SELECT *
			FROM DEVICE
			WHERE DEVICE_NAME LIKE '%Galaxy%'
			OR DEVICE_NAME LIKE '%galaxy%')
		WHERE DEVICE_NAME LIKE '% S%'
		ORDER BY DEVICE_RELEASE_DATE DESC
	</select>
	<select id="galaxyFilp">
		SELECT *
		FROM 
			(SELECT *
			FROM DEVICE
			WHERE DEVICE_NAME LIKE '%Galaxy%'
			OR DEVICE_NAME LIKE '%galaxy%')
		WHERE DEVICE_NAME LIKE '% Flip%'
		ORDER BY DEVICE_RELEASE_DATE DESC
	</select>
	<select id="galaxyFold">
		SELECT *
		FROM 
			(SELECT *
			FROM DEVICE
			WHERE DEVICE_NAME LIKE '%Galaxy%'
			OR DEVICE_NAME LIKE '%galaxy%')
		WHERE DEVICE_NAME LIKE '% Fold%'
		ORDER BY DEVICE_RELEASE_DATE DESC
	</select>
	<select id="galaxyTab">
		SELECT *
		FROM 
			(SELECT *
			FROM DEVICE
			WHERE DEVICE_NAME LIKE '%Galaxy%'
			OR DEVICE_NAME LIKE '%galaxy%')
		WHERE DEVICE_NAME LIKE '% Tab%'
		ORDER BY DEVICE_RELEASE_DATE DESC
	</select>
	<select id="iPhone">
		SELECT *
		FROM DEVICE
		WHERE DEVICE_NAME LIKE '%iPhone%'
		AND NOT DEVICE_NAME LIKE '% X%'
		ORDER BY DEVICE_RELEASE_DATE DESC
	</select>
	<select id="iPhoneX">
		SELECT *
		FROM DEVICE
		WHERE DEVICE_NAME LIKE '%iPhone%'
		AND DEVICE_NAME LIKE '% X%'
		ORDER BY DEVICE_RELEASE_DATE DESC
	</select>
	<select id="iPad">
		SELECT *
		FROM DEVICE
		WHERE DEVICE_NAME LIKE '%iPad%'
		ORDER BY DEVICE_RELEASE_DATE DESC
	</select>
	
	<select id="checkRoomNo">
		SELECT COUNT(*)
		FROM CHATTING_ROOM	
		WHERE MEMBER_NO = #{memberNo}
	</select>
	<select id="checkRoomFl">
		SELECT COUNT(*)
		FROM CHATTING_ROOM
		WHERE ADMIN_NO = #{memberNo}
	</select>
	
	<select id="deviceList" resultType="Device">
SELECT 
	A.DEVICE_NO,
	DEVICE_IMG,
	DEVICE_NAME,
	COLOR_RESULT "colorResult",
	DEVICE_DATE "deviceDate"
FROM 
	DEVICE A
JOIN
	(
	SELECT 
		DEVICE_NO,
		COUNT(DEVICE_NO) COLOR_RESULT,
		MAX(BUYING_DEVICE_UPLOAD_DATE) DEVICE_DATE
	FROM 
		BUYING_DEVICE
	WHERE 
		SOLD_FL = 'N'
	GROUP BY 
		DEVICE_NO
	) B ON (A.DEVICE_NO = B.DEVICE_NO)
ORDER BY
	DEVICE_DATE DESC
	</select>
	
	<select id="popUpData" resultType="Color">
	
	SELECT 
		COLOR_DEVICE_IMG,
		COLOR_NAME,  
		COUNT(BUYING_DEVICE_NO) colorResult
	FROM 
		COLOR
	JOIN 
	   (
	   	SELECT * FROM DEVICE WHERE DEVICE_NO=#{result}
	   ) USING (DEVICE_NO)
	LEFT JOIN 
			(
			SELECT * FROM BUYING_DEVICE WHERE SOLD_FL = 'N'
			) USING (COLOR_NO)
	GROUP BY 
		COLOR_DEVICE_IMG,COLOR_NAME, DEVICE_NAME
	</select>
	
	
	<select id="adminSearch" resultType="Device">
SELECT 
	A.DEVICE_NO,
	DEVICE_IMG,
	DEVICE_NAME,
	COLOR_RESULT "colorResult",
	DEVICE_DATE "deviceDate"
FROM 
	DEVICE A
JOIN
	(
	SELECT 
		DEVICE_NO,
		COUNT(DEVICE_NO) COLOR_RESULT,
		MAX(BUYING_DEVICE_UPLOAD_DATE) DEVICE_DATE
	FROM 
		BUYING_DEVICE
	WHERE 
		SOLD_FL = 'N'

	GROUP BY 
		DEVICE_NO
	) B ON (A.DEVICE_NO = B.DEVICE_NO)
WHERE 
	DEVICE_NAME LIKE '%' || #{search} || '%'
ORDER BY
	DEVICE_DATE DESC
	</select>
	
	<update id="update1Banner">
		UPDATE MAIN_BANNER
		SET MAIN_BANNER_IMG = #{mainBannerImg}
		, MAIN_BANNER_TITLE = #{mainBannerTitle}
		, MAIN_BANNER_CONTENT = #{mainBannerContent}
		, MAIN_BANNER_LINK = #{mainBannerLink}
		, MAIN_BANNER_FONT_COLOR = #{mainBannerFontColor}
		, MAIN_BANNER_LR = #{mainBannerLr}
		WHERE MAIN_BANNER_NO = 1
	</update>
	<update id="update2Banner">
		UPDATE MAIN_BANNER
		SET MAIN_BANNER_IMG = #{mainBannerImg}
		, MAIN_BANNER_TITLE = #{mainBannerTitle}
		, MAIN_BANNER_CONTENT = #{mainBannerContent}
		, MAIN_BANNER_LINK = #{mainBannerLink}
		, MAIN_BANNER_FONT_COLOR = #{mainBannerFontColor}
		, MAIN_BANNER_LR = #{mainBannerLr}
		WHERE MAIN_BANNER_NO = 2
	</update>
	<update id="update3Banner">
		UPDATE MAIN_BANNER
		SET MAIN_BANNER_IMG = #{mainBannerImg}
		, MAIN_BANNER_TITLE = #{mainBannerTitle}
		, MAIN_BANNER_CONTENT = #{mainBannerContent}
		, MAIN_BANNER_LINK = #{mainBannerLink}
		, MAIN_BANNER_FONT_COLOR = #{mainBannerFontColor}
		, MAIN_BANNER_LR = #{mainBannerLr}
		WHERE MAIN_BANNER_NO = 3
	</update>
	<update id="update4Banner">
		UPDATE MAIN_BANNER
		SET MAIN_BANNER_IMG = #{mainBannerImg}
		, MAIN_BANNER_TITLE = #{mainBannerTitle}
		, MAIN_BANNER_CONTENT = #{mainBannerContent}
		, MAIN_BANNER_LINK = #{mainBannerLink}
		, MAIN_BANNER_FONT_COLOR = #{mainBannerFontColor}
		, MAIN_BANNER_LR = #{mainBannerLr}
		WHERE MAIN_BANNER_NO = 4
	</update>
	
	
	
	
	<!-- 기종 등록 -->
	<insert id="device">
			
	INSERT INTO 
		"DEVICE"
	VALUES (
	   SEQ_DEVICE_NO.NEXTVAL,
	   TO_DATE (#{deviceReleaseDate}, 'YYYY-MM-DD'),
	   #{deviceReleasePrice},
	   #{deviceImg},
	   #{deviceOs},
	   #{deviceResolution},
	   #{devicePixel},
	   #{deviceFrontPixel},
	   #{deviceBackPixel},
	   DEFAULT, DEFAULT,
	   #{deviceWeight},
	   #{deviceBatteryCapacity},
	   #{deviceName},
	   #{deviceBuyingPrice},
	   #{deviceSellingPrice},
	   #{deviceBrand},
	   #{ramCapacity},
	   #{deviceCpuName},
	   #{displaySize},
	   #{deviceNameKor}
	   
	)
	</insert>
	
	<select id="getEventLIst">
		SELECT *
		FROM EVENT
		ORDER BY EVENT_NUMBER DESC
	</select>
	<select id="getEventLIstCp">
		SELECT *
		FROM
			(SELECT E.*, ROWNUM "RN"
			FROM
				(SELECT *
				FROM EVENT
				ORDER BY EVENT_NUMBER DESC) E)
		WHERE RN BETWEEN 1 + ((#{cp}-1)*6) AND 6 + ((#{cp}-1)*6)
	</select>
	
	<update id="eventUpdate">
		UPDATE EVENT
		SET 
			EVENT_IMAGE = #{url1},
			EVENT_THUMBNAIL = #{url2}
		WHERE EVENT_NUMBER = #{eventNo}
	</update>
	<update id="eventTitleUpdate">
		UPDATE EVENT
		SET 
			EVENT_TITLE = #{eventTitle}
		WHERE EVENT_NUMBER = #{eventNo}
	</update>
	<update id="eventContentUpdate">
		UPDATE EVENT
		SET 
			EVENT_CONTENT = #{eventContent}
		WHERE EVENT_NUMBER = #{eventNo}
	</update>
	<update id="eventFlUpdate">
		UPDATE "EVENT"
		SET EVENT_DEL_FL = CASE WHEN EVENT_DEL_FL = 'Y' THEN 'N' ELSE 'Y' END
		WHERE EVENT_NUMBER = #{eventNo}
	</update>
	<select id="eventFlSearch">
		SELECT EVENT_DEL_FL
		FROM EVENT
		WHERE EVENT_NUMBER = #{eventNo}
	</select>
	
	
	
	

<!--DEVICENO 하나 가져오기 -->
<select id="selectDeviceNo">
	SELECT
		MAX(DEVICE_NO)
	FROM
		DEVICE
	ORDER BY 
		DEVICE_NO DESC
</select>


	<insert id="colorInsert">
	
	INSERT INTO
		COLOR
			(COLOR_NO, 
			COLOR_NAME, 
			COLOR_CODE, 
			COLOR_DEVICE_IMG, 
			DEVICE_NO)
		VALUES
			(SEQ_COLOR_NO.NEXTVAL, 
			#{colorName}, 
			#{colorCode}, 
			#{colorDeviceImg}, 
			#{deviceNo})
	</insert>


	<insert id="grade">
	INSERT INTO 
		GRADE
	VALUES
		(SEQ_GRADE_NO.NEXTVAL,
		#{gradeTypeOrly},
		#{gradePriceOrly},
		#{gradeSellPriceOrly},
		#{deviceGetNo})
	</insert>



<!-- 구매 정보 리스트 조회 -->
<select id="adminSale">
	SELECT 
		*
	FROM 
	(
		SELECT 
			OO.*, ROWNUM "RN"
		FROM 
		(
			SELECT 
				o.ORDER_NO,
				O.MEMBER_NO,
				MEMBER_ID,
				DEVICE_NAME,
				COLOR_NAME,
				GRADE_TYPE,
				CAPACITY_TYPE,
				order_date,
				ORDER_STATUS_CONTENT
			FROM "ORDER" O
				LEFT JOIN BUYING_DEVICE BD ON (O.BUYING_DEVICE_NO = BD.BUYING_DEVICE_NO)
				LEFT JOIN DEVICE D ON (BD.DEVICE_NO = D.DEVICE_NO)
				LEFT JOIN COLOR C ON (BD.COLOR_NO = C.COLOR_NO)
				LEFT JOIN CAPACITY CP ON (BD.CAPACITY_NUMBER = CP.CAPACITY_NUMBER)
				LEFT JOIN GRADE G ON (BD.GRADE_NUMBER = G.GRADE_NUMBER)
				LEFT JOIN "MEMBER" m ON (o.MEMBER_NO = m.MEMBER_NO)
				LEFT JOIN "ORDER_STATUS" OS ON (O.ORDER_STATUS_CODE = OS.ORDER_STATUS_CODE)
			WHERE 
				D.DEVICE_NO = #{deviceNo}
		) "OO"
	) 
	WHERE 
		RN BETWEEN 1 AND 10
	
		
		
</select>


<update id="update">
	UPDATE 
		"ORDER" 
	SET 
		ORDER_STATUS_CODE = #{orderStatusCode}
	WHERE
		ORDER_NO = #{orderNo}
</update>



<select id="serachFilter">
	SELECT
		o.ORDER_NO,
		O.MEMBER_NO,
		MEMBER_ID,
		DEVICE_NAME,
		COLOR_NAME,
		GRADE_TYPE,
		CAPACITY_TYPE,
		order_date,
		ORDER_STATUS_CONTENT
	FROM "ORDER" O
		LEFT 
			JOIN BUYING_DEVICE BD ON (O.BUYING_DEVICE_NO = BD.BUYING_DEVICE_NO)
		LEFT 
			JOIN DEVICE D ON (BD.DEVICE_NO = D.DEVICE_NO)
		LEFT 
			JOIN COLOR C ON (BD.COLOR_NO = C.COLOR_NO)
		LEFT 
			JOIN CAPACITY CP ON (BD.CAPACITY_NUMBER = CP.CAPACITY_NUMBER)
		LEFT 
			JOIN GRADE G ON (BD.GRADE_NUMBER = G.GRADE_NUMBER)
		LEFT 
			JOIN "MEMBER" m ON (o.MEMBER_NO = m.MEMBER_NO)
		LEFT 
			JOIN "ORDER_STATUS" OS ON (o.ORDER_STATUS_CODE = OS.ORDER_STATUS_CODE)
	WHERE 
		MEMBER_ID LIKE '%'||#{searchResult}||'%'
	OR
		ORDER_NO LIKE '%'||#{searchResult}||'%'
</select>
	
	<!-- 상품조회 버튼별 기기 조회하기 -->
	<select id="brandFilter">
	SELECT D.DEVICE_NO, DEVICE_RELEASE_DATE,DEVICE_NAME,DEVICE_IMG,DEVICE_BRAND,
   NVL((SELECT COUNT(*)
    FROM "ORDER"
    JOIN BUYING_DEVICE USING (BUYING_DEVICE_NO)
    WHERE D.DEVICE_NO = BUYING_DEVICE.DEVICE_NO
    GROUP BY DEVICE_NO), 0) AS "ORDER_COUNT",
   NVL((SELECT COUNT(*)
    FROM "BUYING_DEVICE"
    WHERE D.DEVICE_NO = BUYING_DEVICE.DEVICE_NO
    AND SOLD_FL = 'N'
    GROUP BY DEVICE_NO), 0) AS "DEVICE_COUNT"
FROM DEVICE D
WHERE 
	DEVICE_BRAND = #{brandFilter}
ORDER BY 
	DEVICE_RELEASE_DATE DESC
	</select>
	
	<select id="adminSaleFirst">
		SELECT 
		o.ORDER_NO,
		O.MEMBER_NO,
		MEMBER_ID,
		DEVICE_NAME,
		COLOR_NAME,
		GRADE_TYPE,
		CAPACITY_TYPE,
		order_date,
		ORDER_STATUS_CONTENT
	FROM "ORDER" O
		LEFT JOIN BUYING_DEVICE BD ON (O.BUYING_DEVICE_NO = BD.BUYING_DEVICE_NO)
		LEFT JOIN DEVICE D ON (BD.DEVICE_NO = D.DEVICE_NO)
		LEFT JOIN COLOR C ON (BD.COLOR_NO = C.COLOR_NO)
		LEFT JOIN CAPACITY CP ON (BD.CAPACITY_NUMBER = CP.CAPACITY_NUMBER)
		LEFT JOIN GRADE G ON (BD.GRADE_NUMBER = G.GRADE_NUMBER)
		LEFT JOIN "MEMBER" m ON (o.MEMBER_NO = m.MEMBER_NO)
		LEFT JOIN "ORDER_STATUS" OS ON (O.ORDER_STATUS_CODE = OS.ORDER_STATUS_CODE)
	ORDER BY
		o.ORDER_NO DESC
	</select>
	
<insert id="capacity">
INSERT INTO 
	"CAPACITY_PRICE"
VALUES
(
	#{deviceGetNo},
	#{caNo},
	#{caPrice},
	#{caSellPrice}
)
</insert>	


<select id="reloadDevice">
SELECT 
*
FROM 
	DEVICE D
WHERE
	D.DEVICE_NO = #{deviceNo}
</select>
<select id="reloadGrade">
SELECT 
	*
FROM GRADE g
WHERE 
DEVICE_NO = #{deviceNo}
ORDER BY GRADE_PRICE ASC
</select>

<select id="reloadColor">
SELECT 
	*
FROM 
	COLOR c 
WHERE 
	DEVICE_NO = #{deviceNo}
</select>

<select id="reloadCapacityPrice">
SELECT *
FROM 
	CAPACITY_PRICE cp 
WHERE DEVICE_NO = #{deviceNo}
</select>

<select id="getOrderList">
SELECT R.*,
(
	SELECT DEVICE_NAME
	FROM DEVICE
	WHERE DEVICE_NO =
	(SELECT DEVICE_NO
	FROM BUYING_DEVICE
	WHERE BUYING_DEVICE_NO = 
		(
			SELECT BUYING_DEVICE_NO
			FROM "ORDER"
			WHERE ORDER_NO = R.ORDER_NO
		))
) "DEVICE_NAME" 
FROM REVIEW_NOTI "R"
WHERE RECEIVER_NO = #{memberNo}
</select>

	<delete id="deleteReviewRN">
		DELETE
		FROM REVIEW_NOTI
		WHERE ORDER_NO  =#{orderNo}
	</delete>
	
	
	
	
	<select id="checkRN">
		SELECT COUNT(*)
		FROM REVIEW_NOTI
		WHERE ORDER_NO = #{orderNo}
		AND RECEIVER_NO = #{memberNo}
	</select>
	
	<insert id="insertReviewNoti">
		INSERT INTO REVIEW_NOTI
		VALUES (
			REVIEW_NOTI_SEQ.NEXTVAL, DEFAULT, #{orderNo}, #{memberNo}
		)
	</insert>
	
	
<update id="deviceUpdate">
UPDATE 
	"DEVICE"
SET
	DEVICE_RELEASE_DATE = TO_DATE(#{deviceReleaseDate}, 'YYYY-MM-DD'),
	DEVICE_RELEASE_PRICE = #{deviceReleasePrice},
	<if test="deviceImg != null and !deviceImg.equals('')">
		DEVICE_IMG = #{deviceImg},
	</if>
	DEVICE_OS = #{deviceOs},
	DEVICE_RESOLUTION = #{deviceResolution},
	DEVICE_PIXEL =#{devicePixel},
	DEVICE_FRONT_PIXEL = #{deviceFrontPixel},
	DEVICE_BACK_PIXEL = #{deviceBackPixel},
	DEVICE_WEIGHT = #{deviceWeight},
	DEVICE_BATTERY_CAPACITY = #{deviceBatteryCapacity},
	DEVICE_NAME = #{deviceName},
	DEVICE_BUYING_PRICE = #{deviceBuyingPrice},
	DEVICE_SELLING_PRICE = #{deviceSellingPrice},
	DEVICE_BRAND = #{deviceBrand},
	DEVICE_CPU_NAME = #{deviceCpuName},
	DEVICE_RAM_CODE = #{ramCapacity},
	DEVICE_DISPLAY_CODE = #{displaySize},
	DEVICE_NAME_KOR = #{deviceNameKor}
WHERE 
	DEVICE_NO = #{deviceNo}


</update>


<update id="colorUpdate">
	UPDATE 
		"COLOR"
	SET
		COLOR_NAME = #{colorName}, 
		COLOR_CODE = #{colorCode}, 
	<if test="colorDeviceImg != null and !colorDeviceImg.equals('')">
		COLOR_DEVICE_IMG = #{colorDeviceImg}
	</if>
	WHERE 
		COLOR_NO = #{colorNo}
</update>

<update id="gradeUpdate">
	UPDATE 
		"GRADE"
	SET
		GRADE_PRICE = #{gradePriceOrly},
		GRADE_SELL_PRICE = #{gradeSellPriceOrly}
	WHERE 
		DEVICE_NO = #{deviceNo}
	AND GRADE_TYPE = #{gradeTypeOrly}
</update>




<delete id="capacityDelete">

DELETE 
	CAPACITY_PRICE
WHERE
	DEVICE_NO = #{deviceNo}

</delete>

<insert id="capacityInsert">
INSERT INTO 
	"CAPACITY_PRICE"
VALUES
(
	#{deviceNo},
	#{caNo},
	#{caPrice},
	#{caSellPrice}
)
</insert>


<delete id="colorDelete">
	DELETE 
		COLOR
	WHERE 
		COLOR_NO = #{colorNoCodeOut}

</delete>

<select id="selectBuyingDeviceList">
SELECT 
			BUYING_DEVICE_NO,
			COLOR_NAME,
			DEVICE_NAME,
			CAPACITY_TYPE,
			GRADE_TYPE,
			BUYING_DEVICE_UPLOAD_DATE,
			BUYING_DEVICE_SOLD_DATE,
			SOLD_FL
			FROM
				BUYING_DEVICE BD
			LEFT JOIN
				COLOR C ON (BD.COLOR_NO = C.COLOR_NO)
			LEFT JOIN
				GRADE G ON (BD.GRADE_NUMBER = G.GRADE_NUMBER)
			LEFT JOIN
				CAPACITY CAP ON (BD.CAPACITY_NUMBER = CAP.CAPACITY_NUMBER)
			LEFT JOIN
				DEVICE D ON (BD.DEVICE_NO = D.DEVICE_NO)
			ORDER BY BUYING_DEVICE_UPLOAD_DATE DESC
</select>

<select id="adminAllListSearch">

SELECT 
			BUYING_DEVICE_NO,
			COLOR_NAME,
			DEVICE_NAME,
			CAPACITY_TYPE,
			GRADE_TYPE,
			BUYING_DEVICE_UPLOAD_DATE,
			BUYING_DEVICE_SOLD_DATE,
			SOLD_FL
			FROM
				BUYING_DEVICE BD
			LEFT JOIN
				COLOR C ON (BD.COLOR_NO = C.COLOR_NO)
			LEFT JOIN
				GRADE G ON (BD.GRADE_NUMBER = G.GRADE_NUMBER)
			LEFT JOIN
				CAPACITY CAP ON (BD.CAPACITY_NUMBER = CAP.CAPACITY_NUMBER)
			LEFT JOIN
				DEVICE D ON (BD.DEVICE_NO = D.DEVICE_NO)
			WHERE 
				LOWER(DEVICE_NAME) LIKE LOWER('%'||#{search}||'%')
			ORDER BY BUYING_DEVICE_UPLOAD_DATE DESC
</select>

<select id="productinquirySearch">
SELECT D.DEVICE_NO, DEVICE_RELEASE_DATE,DEVICE_NAME,DEVICE_IMG,
   NVL((SELECT COUNT(*)
    FROM "ORDER"
    JOIN BUYING_DEVICE USING (BUYING_DEVICE_NO)
    WHERE D.DEVICE_NO = BUYING_DEVICE.DEVICE_NO
    GROUP BY DEVICE_NO), 0) AS "ORDER_COUNT",
   NVL((SELECT COUNT(*)
    FROM "BUYING_DEVICE"
    WHERE D.DEVICE_NO = BUYING_DEVICE.DEVICE_NO
    AND SOLD_FL = 'N'
    GROUP BY DEVICE_NO), 0) AS "DEVICE_COUNT"
FROM DEVICE D
WHERE 
	LOWER(DEVICE_NAME) LIKE LOWER('%'||#{search}||'%')
ORDER BY 
	DEVICE_RELEASE_DATE DESC
	</select>
	
	<select id="modelSelect">
		SELECT DEVICE_NAME, DEVICE_NO
		FROM "DEVICE"
		WHERE DEVICE_BRAND = #{brandName}
		ORDER BY DEVICE_RELEASE_DATE DESC
	
	</select>
	
	
	<!-- 구매기기 삽입 -->
	<insert id="insertBuyingDevice">
		INSERT INTO BUYING_DEVICE
		VALUES(SEQ_BUYING_DEVICE_NO.NEXTVAL, <!-- 번호 -->
		DEFAULT,                             <!-- 등록일 -->
		NULL,								<!-- 판매일 -->
		NULL,								<!-- 최종구매가 -->
		#{capacityNumber},									<!-- 용량 -->
		#{deviceNo}, 									<!-- 기종 -->
		#{gradeNumber},						<!-- 등급 -->
		'N',		
		#{colorNo}							<!-- 색상 -->
		)
	</insert>
	
	
	<select id="result">
	SELECT 
		COUNT(*)
	FROM "ORDER" O
		LEFT JOIN BUYING_DEVICE BD ON (O.BUYING_DEVICE_NO = BD.BUYING_DEVICE_NO)
		LEFT JOIN DEVICE D ON (BD.DEVICE_NO = D.DEVICE_NO)
		LEFT JOIN COLOR C ON (BD.COLOR_NO = C.COLOR_NO)
		LEFT JOIN CAPACITY CP ON (BD.CAPACITY_NUMBER = CP.CAPACITY_NUMBER)
		LEFT JOIN GRADE G ON (BD.GRADE_NUMBER = G.GRADE_NUMBER)
		LEFT JOIN "MEMBER" m ON (o.MEMBER_NO = m.MEMBER_NO)
		LEFT JOIN "ORDER_STATUS" OS ON (O.ORDER_STATUS_CODE = OS.ORDER_STATUS_CODE)
		WHERE 
			D.DEVICE_NO = #{deviceNo}
		AND 
			MEMBER_ID LIKE '%'||#{search}||'%'
	ORDER BY
		o.ORDER_NO DESC
	</select>
	
	
	<select id="saleListSelect">
	
		SELECT 
		*
	FROM 
	(
		SELECT 
			OO.*, ROWNUM "RN"
		FROM 
		(
			SELECT 
				o.ORDER_NO,
				O.MEMBER_NO,
				MEMBER_ID,
				DEVICE_NAME,
				COLOR_NAME,
				GRADE_TYPE,
				CAPACITY_TYPE,
				order_date,
				ORDER_STATUS_CONTENT
			FROM "ORDER" O
				LEFT JOIN BUYING_DEVICE BD ON (O.BUYING_DEVICE_NO = BD.BUYING_DEVICE_NO)
				LEFT JOIN DEVICE D ON (BD.DEVICE_NO = D.DEVICE_NO)
				LEFT JOIN COLOR C ON (BD.COLOR_NO = C.COLOR_NO)
				LEFT JOIN CAPACITY CP ON (BD.CAPACITY_NUMBER = CP.CAPACITY_NUMBER)
				LEFT JOIN GRADE G ON (BD.GRADE_NUMBER = G.GRADE_NUMBER)
				LEFT JOIN "MEMBER" m ON (o.MEMBER_NO = m.MEMBER_NO)
				LEFT JOIN "ORDER_STATUS" OS ON (O.ORDER_STATUS_CODE = OS.ORDER_STATUS_CODE)
			WHERE 
				D.DEVICE_NO = #{deviceNo}
			AND
				MEMBER_ID LIKE '%'||#{search}||'%'
		) "OO"
	) 
	WHERE 
		RN BETWEEN 1 + ((#{cp}-1)*10) AND 10 + ((#{cp}-1)*10)

	
	</select>
	
	
	<select id="resultAll">
	
SELECT
	COUNT(*)
	FROM
	(
SELECT D.DEVICE_NO, DEVICE_RELEASE_DATE,DEVICE_NAME,DEVICE_IMG,
   NVL((SELECT COUNT(*)
    FROM "ORDER"
    JOIN BUYING_DEVICE USING (BUYING_DEVICE_NO)
    WHERE D.DEVICE_NO = BUYING_DEVICE.DEVICE_NO
    GROUP BY DEVICE_NO), 0) AS "ORDER_COUNT",
   NVL((SELECT COUNT(*)
    FROM "BUYING_DEVICE"
    WHERE D.DEVICE_NO = BUYING_DEVICE.DEVICE_NO
    AND SOLD_FL = 'N'
    GROUP BY DEVICE_NO), 0) AS "DEVICE_COUNT"
FROM DEVICE D
WHERE
	LOWER(DEVICE_NAME) LIKE LOWER('%'||#{search}||'%')
	<if test="search.equals('Galaxy')">
	AND 
		DEVICE_BRAND = 'SAMSUNG'
	</if>
ORDER BY 
	DEVICE_RELEASE_DATE DESC
)R
	</select>
	
	
	<select id="productList">
SELECT 
*
FROM
(
	SELECT 
		A.*, ROWNUM "RN"
	FROM
	(
		SELECT D.DEVICE_NO, DEVICE_RELEASE_DATE,DEVICE_NAME,DEVICE_IMG,
		   NVL((SELECT COUNT(*)
		    FROM "ORDER"
		    JOIN BUYING_DEVICE USING (BUYING_DEVICE_NO)
		    WHERE D.DEVICE_NO = BUYING_DEVICE.DEVICE_NO
		    GROUP BY DEVICE_NO), 0) AS "ORDER_COUNT",
		   NVL((SELECT COUNT(*)
		    FROM "BUYING_DEVICE"
		    WHERE D.DEVICE_NO = BUYING_DEVICE.DEVICE_NO
		    AND SOLD_FL = 'N'
		    GROUP BY DEVICE_NO), 0) AS "DEVICE_COUNT"
		FROM DEVICE D
		WHERE 
			LOWER(DEVICE_NAME) LIKE LOWER('%'||#{search}||'%')
			<if test="search.equals('Galaxy')">
			AND 
			DEVICE_BRAND = 'SAMSUNG'
			</if>
		ORDER BY 
			DEVICE_RELEASE_DATE DESC
	)"A"
)
WHERE 
	RN BETWEEN 1 + ((#{cp}-1)*10) AND 10 + ((#{cp}-1)*10)
	</select>
	
	
</mapper>
